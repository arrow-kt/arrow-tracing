[versions]
kotlin = "1.6.10"
arrow = "1.0.1"
arrowGradleConfig = "0.10.0"
coroutines = "1.6.0"
kotest = "5.2.1"
kotestArrow = "1.2.4"
opentracing = "0.33.0"
opencensus = "0.28.3"
newrelic = "0.12.0"
newrelic-telemetry = "0.10.0"
lightstep = "0.30.3"
lightstepJre = "0.30.5"
jaeger = "1.6.0"
libhoney = "1.3.1"
datadog = "0.90.0"
kotlinBinaryCompatibilityValidator = "0.8.0"
detekt = "1.19.0"
kover = "0.5.0"

[libraries]
kotlin-stdlibCommon = { module = "org.jetbrains.kotlin:kotlin-stdlib-common", version.ref = "kotlin" }
kotlin-stdlibJDK8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }

kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrowCore = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrow" }
kotest-property-arrowCore = { module = "io.kotest.extensions:kotest-property-arrow", version.ref = "kotestArrow" }

opentracing-api = { module = "io.opentracing:opentracing-api", version.ref = "opentracing" }
opentracing-util = { module = "io.opentracing:opentracing-util", version.ref = "opentracing" }

opencensus-exporterTraceOcagent = { module = "io.opencensus:opencensus-exporter-trace-ocagent", version.ref = "opencensus" }

newrelic-telemetry = { module = "com.newrelic.telemetry:telemetry", version.ref = "newrelic-telemetry" }
newrelic-telemetry-core = { module = "com.newrelic.telemetry:telemetry-core", version.ref = "newrelic" }
newrelic-telemetry-okhttp = { module = "com.newrelic.telemetry:telemetry-http-okhttp", version.ref = "newrelic" }

lightstep-okhtpp = { module = "com.lightstep.tracer:tracer-okhttp", version.ref = "lightstep" }
lightstep-grpc = { module = "com.lightstep.tracer:tracer-grpc", version.ref = "lightstep" }
lightstep-jre = { module = "com.lightstep.tracer:lightstep-tracer-jre", version.ref = "lightstepJre" }

jaeger-client = { module = "io.jaegertracing:jaeger-client", version.ref = "jaeger" }

libhoney-java = { module = "io.honeycomb.libhoney:libhoney-java", version.ref = "libhoney" }

datadog-api = { module = "com.datadoghq:dd-trace-api", version.ref = "datadog" }
datadog-ot = { module = "com.datadoghq:dd-trace-ot", version.ref = "datadog" }

[plugins]
arrowGradleConfig-formatter = { id = "io.arrow-kt.arrow-gradle-config-formatter", version.ref = "arrowGradleConfig" }
arrowGradleConfig-kotlin = { id = "io.arrow-kt.arrow-gradle-config-kotlin", version.ref = "arrowGradleConfig" }
arrowGradleConfig-nexus = { id = "io.arrow-kt.arrow-gradle-config-nexus", version.ref = "arrowGradleConfig" }
arrowGradleConfig-publish = { id = "io.arrow-kt.arrow-gradle-config-publish", version.ref = "arrowGradleConfig" }
arrowGradleConfig-versioning = { id = "io.arrow-kt.arrow-gradle-config-versioning", version.ref = "arrowGradleConfig" }
binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityValidator" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }

[bundles]
kotest-jvm = ["kotest-assertionsCore", "kotest-property", "kotest-runnerJUnit5", "kotest-frameworkEngine", "kotest-arrowCore", "kotest-property-arrowCore"]
kotest-mpp = ["kotest-assertionsCore", "kotest-property", "kotest-frameworkEngine", "kotest-arrowCore", "kotest-property-arrowCore"]